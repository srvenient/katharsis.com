version: "2.22.0"

services:
  backend:
    container_name: '${PROJECT_NAME?Variable not set}-backend'
    build: ./backend
    ports:
      - '8000:8000'
    env_file:
      - .env
    command: ["fastapi", "run", "--reload", "app/main.py"]
    develop:
      watch:
        - path: ./backend
          action: sync
          target: /app
          ignore:
            - ./backend/.venv
            - .venv
        - path: ./backend/pyproject.toml
          action: rebuild
    depends_on:
      - db   #el servicio va a esperar que se levante primero la base de datos para evitar conflictos si no se encuentra la base de datos al iniciar el backend
  frontend:
    container_name: '${PROJECT_NAME?Variable not set}-frontend'
    build:
      context: ./frontend
      target: runner
    ports:
      - '3000:3000'
    develop:
      watch:
        - path: ./frontend
          target: /app
          action: sync
          ignore:
            - .next
            - node_modules
            - .git
            - .DS_Store
            - .env
        - path: ./package.json
          action: rebuild

  db:
    container_name: '${PROJECT_NAME?Variable not set}-db'
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ktrs.dark
      MYSQL_DATABASE: katharsis
      MYSQL_USER: user
      MYSQL_PASSWORD: 12345
    ports:
      - '3306:3306'
    volumes:
      - db_data:/var/lib/mysql

volumes:
  db_data:
